ADD SOME CEHCKING SUCH AS LENGTHS AND SUCH in AUTH file

ADD NAV BAR IN LAYOUT PAGE 

ADD MSSAGE FLASHING

CHECK HOW TO ADD DATE OF CARD AND CHECK REST OF DATABASE IN MODELS file

CHECK IF YOU SHOULD USE FLASKWTF OR FLASKLOGIN

CHECK TIMESTAMP ATTRIBUTE AND,DATES]

CHECK IF SOMEONE REGISTERS IF THEY SIGN IN AUTOMATICALLY

ADD FLASHING FOR THE FUNCTIONS IN AUTH FILES
https://flask.palletsprojects.com/en/1.1.x/patterns/flashing/

ADD VALIDATION FOR LOGINS
https://flask.palletsprojects.com/en/2.0.x/patterns/flashing/

CHECK HASHED PASSWORDS WHEN CHECKING IF PASSWORD IS CORRECT IN LOGIN

CHECK IF FLASHING INSIDE A FUNCTION

IN THE FUNCTION RETURN AN ERROR MESSAGE AS [1] AND AT [0] IT WOULD BE THE TRUE OF FALSE STATMENETS

MAKE THE LENGTH OF THE VARIAVBLES ACCURATE, THE SAME AS THE WORD DOCUMENT DESIHN

IF VAIRBALE IS SMEPTY ITS FALSE

ADD LOGO AND EDIT THE NAVBAR

FIX HOME PAGE REDIRECT LINKS

MAKE THE CARD IN THE MIDDLE AND VERTICAL LIKE A TIKTOK, WHERER EDIT WINDOW SHOWS UP IN THE LEFT AND OTHER MENU SHOWS RIGHT.



ADD BOOSTRAP LAYOUT TO MAKE IT UNDER EACH OTHER 
FIX LOGO TO SHOW IT ALL

MAKE SEARCH ONLY SHOW UP WHEN ITS IN LOGIN PAGE


ADD SORTING ALGORITHIM FOR CARDS IN JAVASCRIPT??

ADD A LINK FOR EACH SUBDECK where i's /study/deckname


add a an accordion component, which allows you to toggle the display of subdecks when the user clicks on the main deck. to support multi deck

https://getbootstrap.com/docs/5.0/components/card/

Use https://www.digitalocean.com/community/tutorials/how-to-use-flask-sqlalchemy-to-interact-with-databases-in-a-flask-application
to create db but first finish off the database deisgn
from app import db, Student
db.create_all()

however, this can be done
db.drop_all()
db.create_all()


check if id is created itself
https://flask-sqlalchemy.palletsprojects.com/en/3.0.x/quickstart/


ADD COMPLEX TABLE A STUFF LIKE CROSS PARLAMIZED SQL

    <!--jinja_env = Environment(extensions=['jinja2.ext.loopcontrols'])-->
    {% with messages = get_flashed_messages(with_categories=true) %}
    <div class="container mt-3">
        {% for category, message in messages %}
        <!--If there are more than 2 errors/flashes than it would not display them, it would only display the first 2 flashes-->
        {% if loop.index > 2 %}
            <!--{% break %}-->
        {% endif %}
        <div class="alert alert-{{ category }}" role="alert">
            {{ message }}
        </div>
        {% endfor %}
    </div>
    {% endwith %}


IF THER EIS AN ERROR SUCH AS DUPLICATE USERNAMES AND SQL ALCHJEMY RETURNS ERROR ADD TRY AND EXCEPT FOR FLASH messages


PARENTS WITH OPTINAL CHILDERNE

ADD THE REQUIMENTS SUCH AS LENGHT OF USE4RNEMA EANDPASSWORD TO REGISTER SCRENE


search added